// Code generated by "stringer -type=opcode"; DO NOT EDIT.

package transformer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[nop-0]
	_ = x[aconst_null-1]
	_ = x[iconst_m1-2]
	_ = x[iconst_0-3]
	_ = x[iconst_1-4]
	_ = x[iconst_2-5]
	_ = x[iconst_3-6]
	_ = x[iconst_4-7]
	_ = x[iconst_5-8]
	_ = x[lconst_0-9]
	_ = x[lconst_1-10]
	_ = x[fconst_0-11]
	_ = x[fconst_1-12]
	_ = x[fconst_2-13]
	_ = x[dconst_0-14]
	_ = x[dconst_1-15]
	_ = x[bipush-16]
	_ = x[sipush-17]
	_ = x[ldc-18]
	_ = x[ldc_w-19]
	_ = x[ldc2_w-20]
	_ = x[iload-21]
	_ = x[lload-22]
	_ = x[fload-23]
	_ = x[dload-24]
	_ = x[aload-25]
	_ = x[iload_0-26]
	_ = x[iload_1-27]
	_ = x[iload_2-28]
	_ = x[iload_3-29]
	_ = x[lload_0-30]
	_ = x[lload_1-31]
	_ = x[lload_2-32]
	_ = x[lload_3-33]
	_ = x[fload_0-34]
	_ = x[fload_1-35]
	_ = x[fload_2-36]
	_ = x[fload_3-37]
	_ = x[dload_0-38]
	_ = x[dload_1-39]
	_ = x[dload_2-40]
	_ = x[dload_3-41]
	_ = x[aload_0-42]
	_ = x[aload_1-43]
	_ = x[aload_2-44]
	_ = x[aload_3-45]
	_ = x[iaload-46]
	_ = x[laload-47]
	_ = x[faload-48]
	_ = x[daload-49]
	_ = x[aaload-50]
	_ = x[baload-51]
	_ = x[caload-52]
	_ = x[saload-53]
	_ = x[istore-54]
	_ = x[lstore-55]
	_ = x[fstore-56]
	_ = x[dstore-57]
	_ = x[astore-58]
	_ = x[istore_0-59]
	_ = x[istore_1-60]
	_ = x[istore_2-61]
	_ = x[istore_3-62]
	_ = x[lstore_0-63]
	_ = x[lstore_1-64]
	_ = x[lstore_2-65]
	_ = x[lstore_3-66]
	_ = x[fstore_0-67]
	_ = x[fstore_1-68]
	_ = x[fstore_2-69]
	_ = x[fstore_3-70]
	_ = x[dstore_0-71]
	_ = x[dstore_1-72]
	_ = x[dstore_2-73]
	_ = x[dstore_3-74]
	_ = x[astore_0-75]
	_ = x[astore_1-76]
	_ = x[astore_2-77]
	_ = x[astore_3-78]
	_ = x[iastore-79]
	_ = x[lastore-80]
	_ = x[fastore-81]
	_ = x[dastore-82]
	_ = x[aastore-83]
	_ = x[bastore-84]
	_ = x[castore-85]
	_ = x[sastore-86]
	_ = x[pop-87]
	_ = x[pop2-88]
	_ = x[dup-89]
	_ = x[dup_x1-90]
	_ = x[dup_x2-91]
	_ = x[dup2-92]
	_ = x[dup2_x1-93]
	_ = x[dup2_x2-94]
	_ = x[swap-95]
	_ = x[iadd-96]
	_ = x[ladd-97]
	_ = x[fadd-98]
	_ = x[dadd-99]
	_ = x[isub-100]
	_ = x[lsub-101]
	_ = x[fsub-102]
	_ = x[dsub-103]
	_ = x[imul-104]
	_ = x[lmul-105]
	_ = x[fmul-106]
	_ = x[dmul-107]
	_ = x[idiv-108]
	_ = x[ldiv-109]
	_ = x[fdiv-110]
	_ = x[ddiv-111]
	_ = x[irem-112]
	_ = x[lrem-113]
	_ = x[frem-114]
	_ = x[drem-115]
	_ = x[ineg-116]
	_ = x[lneg-117]
	_ = x[fneg-118]
	_ = x[dneg-119]
	_ = x[ishl-120]
	_ = x[lshl-121]
	_ = x[ishr-122]
	_ = x[lshr-123]
	_ = x[iushr-124]
	_ = x[lushr-125]
	_ = x[iand-126]
	_ = x[land-127]
	_ = x[ior-128]
	_ = x[lor-129]
	_ = x[ixor-130]
	_ = x[lxor-131]
	_ = x[iinc-132]
	_ = x[i2l-133]
	_ = x[i2f-134]
	_ = x[i2d-135]
	_ = x[l2i-136]
	_ = x[l2f-137]
	_ = x[l2d-138]
	_ = x[f2i-139]
	_ = x[f2l-140]
	_ = x[f2d-141]
	_ = x[d2i-142]
	_ = x[d2l-143]
	_ = x[d2f-144]
	_ = x[i2b-145]
	_ = x[i2c-146]
	_ = x[i2s-147]
	_ = x[lcmp-148]
	_ = x[fcmpl-149]
	_ = x[fcmpg-150]
	_ = x[dcmpl-151]
	_ = x[dcmpg-152]
	_ = x[ifeq-153]
	_ = x[ifne-154]
	_ = x[iflt-155]
	_ = x[ifge-156]
	_ = x[ifgt-157]
	_ = x[ifle-158]
	_ = x[if_icmpeq-159]
	_ = x[if_icmpne-160]
	_ = x[if_icmplt-161]
	_ = x[if_icmpge-162]
	_ = x[if_icmpgt-163]
	_ = x[if_icmple-164]
	_ = x[if_acmpeq-165]
	_ = x[if_acmpne-166]
	_ = x[goto_-167]
	_ = x[jsr-168]
	_ = x[ret-169]
	_ = x[tableswitch-170]
	_ = x[lookupswitch-171]
	_ = x[ireturn-172]
	_ = x[lreturn-173]
	_ = x[freturn-174]
	_ = x[dreturn-175]
	_ = x[areturn-176]
	_ = x[return_-177]
	_ = x[getstatic-178]
	_ = x[putstatic-179]
	_ = x[getfield-180]
	_ = x[putfield-181]
	_ = x[invokevirtual-182]
	_ = x[invokespecial-183]
	_ = x[invokestatic-184]
	_ = x[invokeinterface-185]
	_ = x[invokedynamic-186]
	_ = x[new_-187]
	_ = x[newarray-188]
	_ = x[anewarray-189]
	_ = x[arraylength-190]
	_ = x[athrow-191]
	_ = x[checkcast-192]
	_ = x[instanceof-193]
	_ = x[monitorenter-194]
	_ = x[monitorexit-195]
	_ = x[wide-196]
	_ = x[multianewarray-197]
	_ = x[ifnull-198]
	_ = x[ifnonnull-199]
	_ = x[goto_w-200]
	_ = x[jsr_w-201]
	_ = x[breakpoint-202]
	_ = x[impdep1-254]
	_ = x[impdep2-255]
}

const (
	_opcode_name_0 = "nopaconst_nulliconst_m1iconst_0iconst_1iconst_2iconst_3iconst_4iconst_5lconst_0lconst_1fconst_0fconst_1fconst_2dconst_0dconst_1bipushsipushldcldc_wldc2_wiloadlloadfloaddloadaloadiload_0iload_1iload_2iload_3lload_0lload_1lload_2lload_3fload_0fload_1fload_2fload_3dload_0dload_1dload_2dload_3aload_0aload_1aload_2aload_3ialoadlaloadfaloaddaloadaaloadbaloadcaloadsaloadistorelstorefstoredstoreastoreistore_0istore_1istore_2istore_3lstore_0lstore_1lstore_2lstore_3fstore_0fstore_1fstore_2fstore_3dstore_0dstore_1dstore_2dstore_3astore_0astore_1astore_2astore_3iastorelastorefastoredastoreaastorebastorecastoresastorepoppop2dupdup_x1dup_x2dup2dup2_x1dup2_x2swapiaddladdfadddaddisublsubfsubdsubimullmulfmuldmulidivldivfdivddiviremlremfremdremineglnegfnegdnegishllshlishrlshriushrlushriandlandiorlorixorlxoriinci2li2fi2dl2il2fl2df2if2lf2dd2id2ld2fi2bi2ci2slcmpfcmplfcmpgdcmpldcmpgifeqifneifltifgeifgtifleif_icmpeqif_icmpneif_icmpltif_icmpgeif_icmpgtif_icmpleif_acmpeqif_acmpnegoto_jsrrettableswitchlookupswitchireturnlreturnfreturndreturnareturnreturn_getstaticputstaticgetfieldputfieldinvokevirtualinvokespecialinvokestaticinvokeinterfaceinvokedynamicnew_newarrayanewarrayarraylengthathrowcheckcastinstanceofmonitorentermonitorexitwidemultianewarrayifnullifnonnullgoto_wjsr_wbreakpoint"
	_opcode_name_1 = "impdep1impdep2"
)

var (
	_opcode_index_0 = [...]uint16{0, 3, 14, 23, 31, 39, 47, 55, 63, 71, 79, 87, 95, 103, 111, 119, 127, 133, 139, 142, 147, 153, 158, 163, 168, 173, 178, 185, 192, 199, 206, 213, 220, 227, 234, 241, 248, 255, 262, 269, 276, 283, 290, 297, 304, 311, 318, 324, 330, 336, 342, 348, 354, 360, 366, 372, 378, 384, 390, 396, 404, 412, 420, 428, 436, 444, 452, 460, 468, 476, 484, 492, 500, 508, 516, 524, 532, 540, 548, 556, 563, 570, 577, 584, 591, 598, 605, 612, 615, 619, 622, 628, 634, 638, 645, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 728, 732, 736, 740, 744, 748, 752, 756, 760, 764, 768, 773, 778, 782, 786, 789, 792, 796, 800, 804, 807, 810, 813, 816, 819, 822, 825, 828, 831, 834, 837, 840, 843, 846, 849, 853, 858, 863, 868, 873, 877, 881, 885, 889, 893, 897, 906, 915, 924, 933, 942, 951, 960, 969, 974, 977, 980, 991, 1003, 1010, 1017, 1024, 1031, 1038, 1045, 1054, 1063, 1071, 1079, 1092, 1105, 1117, 1132, 1145, 1149, 1157, 1166, 1177, 1183, 1192, 1202, 1214, 1225, 1229, 1243, 1249, 1258, 1264, 1269, 1279}
	_opcode_index_1 = [...]uint8{0, 7, 14}
)

func (i opcode) String() string {
	switch {
	case i <= 202:
		return _opcode_name_0[_opcode_index_0[i]:_opcode_index_0[i+1]]
	case 254 <= i && i <= 255:
		i -= 254
		return _opcode_name_1[_opcode_index_1[i]:_opcode_index_1[i+1]]
	default:
		return "opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
